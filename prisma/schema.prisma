generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Home {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  title       String
  role        String
  description String?
  image       String?

  @@map("homes")
}

model About {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  person    String
  education String
  address   String
  image     String?

  @@map("abouts")
}

model Curriculum {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  curriculum String
  fileName   String
  publicId   String?

  @@map("curriculums")
}

model Experience {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  company    String
  period     String
  role       String
  activities String[]

  @@map("experiences")
}

model Skill {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name       String
  level      Int
  experience Int
  type       String
  icon       String
  color      String?

  projectSkills ProjectSkill[]

  @@map("skills")
}

model Project {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name        String
  image       String
  video       String?
  description String
  link        String

  projectSkills ProjectSkill[]

  @@map("projects")
}

model ProjectSkill {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  projectId String @db.ObjectId
  skillId   String @db.ObjectId

  project Project @relation(fields: [projectId], references: [id])
  skill   Skill   @relation(fields: [skillId], references: [id])

  @@unique([projectId, skillId])
  @@map("project_skills")
}

model Stack {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name  String
  icon  String
  color String

  @@map("stacks")
}

model Contact {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name    String
  phone   String
  email   String
  subject String
  message String
}

model SocialMedia {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name  String?
  link  String
  icon  String
  color String?
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  email    String
  password String
  active   Boolean @default(false)
}
