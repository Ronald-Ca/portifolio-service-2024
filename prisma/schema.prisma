generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Home {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  title       String
  role        String
  description String?
  image       String?

  @@map("homes")
}

model About {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  person    String
  education String
  address   String
  image     String?

  @@map("abouts")
}

model Experience {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  company    String
  period     String
  role       String
  activities String[]

  stacks ExperienceStack[]

  @@map("experiences")
}

model Skill {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name       String
  level      Int
  experience Int
  type       String

  stackId String @db.ObjectId
  stack   Stack  @relation(fields: [stackId], references: [id])

  @@map("skills")
}

model Project {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name        String
  image       String
  video       String?
  description String
  link        String

  stacks ProjectStack[]

  @@map("projects")
}

model Stack {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name  String
  icon  String
  color String

  skills      Skill[]
  experiences ExperienceStack[]
  projects    ProjectStack[]

  @@map("stacks")
}

model ExperienceStack {
  id           String     @id @default(auto()) @map("_id") @db.ObjectId
  experience   Experience @relation(fields: [experienceId], references: [id])
  experienceId String     @db.ObjectId
  stack        Stack      @relation(fields: [stackId], references: [id])
  stackId      String     @db.ObjectId

  @@unique([experienceId, stackId])
  @@map("experience_stack")
}

model ProjectStack {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  project   Project @relation(fields: [projectId], references: [id])
  projectId String  @db.ObjectId
  stack     Stack   @relation(fields: [stackId], references: [id])
  stackId   String  @db.ObjectId

  @@unique([projectId, stackId])
  @@map("project_stack")
}

model Contact {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name    String
  phone   String
  email   String
  subject String
  message String
}

model SocialMedia {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name  String?
  link  String
  icon  String
  color String?
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  email    String
  password String
  active   Boolean @default(false)
}
