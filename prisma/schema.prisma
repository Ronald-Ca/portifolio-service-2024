generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Home {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  title           String
  role            String
  description     String?
  image           String?
  colorBackground String?
  imageBackground String?

  @@map("homes")
}

model About {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name  String
  age   Int
  city  String
  state String
  image String?

  @@map("abouts")
}

model Graduation {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  course      String
  institution String
  yearInit    String
  yearFinal   String?
  city        String?
  state       String?
  modality    String?

  @@map("graduations")
}

model Curriculum {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  curriculum String
  fileName   String
  publicId   String?

  @@map("curriculums")
}

model Skill {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name       String
  level      Int
  experience Int
  type       String
  icon       String
  color      String?

  projectSkills   ProjectSkill[]
  ExperienceSkill ExperienceSkill[]

  @@map("skills")
}

model Experience {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  company     String
  role        String
  yearInitial Int
  mothInitial String
  yearFinal   Int
  mothFinal   String   @default("Present")
  activities  String[]

  experienceSkill ExperienceSkill[]

  @@map("experiences")
}

model ExperienceSkill {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  experienceId String @db.ObjectId
  skillId      String @db.ObjectId

  experience Experience @relation(fields: [experienceId], references: [id])
  skill      Skill      @relation(fields: [skillId], references: [id])

  @@unique([experienceId, skillId])
  @@map("experience_skills")
}

model Project {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name        String
  image       String
  video       String?
  description String?
  link        String?

  projectSkills ProjectSkill[]

  @@map("projects")
}

model ProjectSkill {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  projectId String @db.ObjectId
  skillId   String @db.ObjectId

  project Project @relation(fields: [projectId], references: [id])
  skill   Skill   @relation(fields: [skillId], references: [id])

  @@unique([projectId, skillId])
  @@map("project_skills")
}

model Contact {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name    String
  phone   String
  email   String
  subject String
  message String
}

model SocialMedia {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name  String?
  link  String
  icon  String
  color String?
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  email    String
  password String
  active   Boolean @default(false)
}
